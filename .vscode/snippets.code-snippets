{
  // Place your srs-v2 workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  /* solid components */
  "solidComponent": {
    "scope": "typescriptreact,javascriptreact",
    "prefix": "_scomp",
    "body": [
      "import { css } from 'solid-styled-components';",
      "",
      "const containerStyle = css`",
      "  $6",
      "`;",
      "",
      "type $1Props = {",
      "};",
      "",
      "export const ${1:${TM_FILENAME_BASE}} = (props: $1Props) => {",
      "  $8",
      "",
      "  return (",
      "    <div class={containerStyle}>",
      "      $7",
      "    </div>",
      "  );",
      "};"
    ],
    "description": "Solidjs Component"
  },

  "solid <For>": {
    "scope": "typescriptreact,javascriptreact",
    "prefix": "_sfor",
    "body": [
      "<For each={$1}>",
      "  {(${2:item}) => (",
      "    $3",
      "  )}",
      "</For>"
    ]
  },

  "solid <Show>": {
    "scope": "typescriptreact,javascriptreact",
    "prefix": "_sshow",
    "body": [
      "<Show when={$1}>",
      "  {(${2:item}) => (",
      "    $3",
      "  )}",
      "</Show>"
    ]
  },

  "css": {
    "scope": "typescriptreact",
    "prefix": "_scss",
    "body": ["const $1Style = css$3`", "$2", "`"]
  }
}
